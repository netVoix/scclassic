package DarkRitual

import ObjectIdGenerator
import AbilityObjEditing
import RegisterEvents
import LinkedList
import ArmyOfTheDead

public let DARK_RITUAL_ID = compiletime(ABIL_ID_GEN.next())
public let sceleton = new LinkedList<int>()


@compiletime function deathpuct()
    new AbilityDefinitionDeathKnightDeathPact(DARK_RITUAL_ID)
    ..setHeroAbility(true)
    ..presetButtonPosNormal(2, 2)
    ..setRequiredLevel(1)
    ..setLevels(7)
    ..setLevelSkipRequirement(4)
    ..presetCastRange(lvl -> 700)
    ..presetCooldown(lvl -> 30) 
    ..presetManaCost(lvl -> 60) 
    ..presetLifeConversionAsPercent(lvl -> false) 
    ..presetLeaveTargetAlive(lvl -> false)
    ..presetLifeConvertedtoLife(lvl -> 0) 
    ..presetManaConversionAsPercent(lvl -> false) 
    ..presetLifeConvertedtoMana(lvl -> 0.8 + 0.2 * lvl)
    ..presetTargetsAllowed(lvl -> "air,friend,ground,neutral,nonhero,organic,self")
    ..presetTooltipNormal(lvl -> "Dark Ritual " + lvl.toString() + " lvl")
    ..presetTooltipNormalExtended(lvl -> "Sacrifices a target friendly unit to convert its " + (8 + 1 * lvl).toString() + "% hit points into mana for the Kepereter. And summoning Sceleton.")
    ..presetEffects(lvl -> "Abilities\\Spells\\Undead\\DarkRitual\\DarkRitualTarget.mdl") 
        

function pricklyrootsuse(int abil,unit u)
    if abil == DARK_RITUAL_ID
        integer newsceleton
        sceleton.add(SKELETON_WARRIOR_ID,SKELETON_ARCHER_ID,SKELETON_MAGE_ID)
        sceleton.shuffle()
        newsceleton = sceleton.getFirst()
        CreateNUnitsAtLoc(1,newsceleton,GetOwningPlayer(GetTriggerUnit()),GetUnitLoc(u),bj_UNIT_FACING)
        sceleton.clear()


init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST) ->
        pricklyrootsuse(GetSpellAbilityId(),GetSpellTargetUnit())