package DirtyFighting
import ObjEditingNatives
import ObjectIdGenerator
import MainCastleRogue
import ObjectIds
import VeteranScum
import Enforcer
import Brigand
import RegisterEvents

public let DIRTY_FIGHTING = compiletime(UPGD_ID_GEN.next())

trigger fight = CreateTrigger()

@compiletime function create_w3q_R059()
	createObjectDefinition("w3q", DIRTY_FIGHTING, 'Rhde')
	..setLvlDataInt("glmb", 0, 0, 0)
	..setLvlDataInt("gtib", 0, 0, 90)
	..setLvlDataString("ghk1", 1, 0, "Z")
	..setLvlDataString("gtp1", 1, 0, "Research Dirty Fighting (|cffff0000Lv1|r) [|cffffcc00Z|r]")
	..setLvlDataInt("gglb", 0, 0, 475)
	..setLvlDataString("gub1", 1, 0, "|cffffcc00Gives:|r chance to reduce damage |n|cffffcc00Affects:|r |cffffdeadEnforcer|r |n|cff6c7b8b(affects organic units only)|r |n|cff6c7b8b(affects non-Hero units only)|r |n|n|cff6c7b8bLv1: 20% chance, -10% damage |nLv2: 25% chance, -20% damage |nLv3: 30% chance, -30% damage |nLv4: 35% chance, -40% damage")
	..setLvlDataString("greq", 1, 0, commaList(MAIN_CASTLE_ROGUE_LVL2))
	..setLvlDataInt("glvl", 0, 0, 5)
	..setLvlDataInt("gglm", 0, 0, 200)
	..setLvlDataInt("gtim", 0, 0, 60)
	..setLvlDataString("gnam", 2, 0, "Dirty Fighting")
	..setLvlDataString("gnam", 3, 0, "Dirty Fighting")
	..setLvlDataString("gar1", 2, 0, "ReplaceableTextures\\CommandButtons\\BTNMaim.blp")
	..setLvlDataString("gar1", 3, 0, "ReplaceableTextures\\CommandButtons\\BTNMaim.blp")
	..setLvlDataString("gtp1", 2, 0, "Research Dirty Fighting (|cffffff00Lv2|r) [|cffffcc00Z|r]")
	..setLvlDataString("gtp1", 3, 0, "Research Dirty Fighting (|cff00ff00Lv3|r) [|cffffcc00Z|r]")
	..setLvlDataString("gco1", 0, 0, "Adef")
	..setLvlDataUnreal("gmo1", 0, 0, 1.0)
	..setLvlDataString("gub1", 2, 0, "|cffffcc00Gives:|r chance to reduce damage |n|cffffcc00Affects:|r |cffffdeadEnforcer|r |n|cff6c7b8b(affects organic units only)|r |n|cff6c7b8b(affects non-Hero units only)|r |n|n|cffff0000Lv1:|r |cffffcc0020%|r chance, |cffffcc00-10%|r damage |n|cff6c7b8bLv2: 25% chance, -20% damage |nLv3: 30% chance, -30% damage |nLv4: 35% chance, -40% damage")
	..setLvlDataString("gub1", 3, 0, "|cffffcc00Gives:|r chance to reduce damage |n|cffffcc00Affects:|r |cffffdeadEnforcer|r |n|cff6c7b8b(affects organic units only)|r |n|cff6c7b8b(affects non-Hero units only)|r |n|n|cff6c7b8bLv1: 20% chance, -10% damage|r |n|cffffff00Lv2:|r |cffffcc0025%|r chance, |cffffcc00-20%|r damage |n|cff6c7b8bLv3: 30% chance, -30% damage |nLv4: 35% chance, -40% damage")
	..setLvlDataString("ghk1", 2, 0, "Z")
	..setLvlDataString("ghk1", 3, 0, "Z")
	..setLvlDataString("gar1", 4, 0, "ReplaceableTextures\\CommandButtons\\BTNMaim.blp")
	..setLvlDataString("ghk1", 4, 0, "Z")
	..setLvlDataString("gnam", 4, 0, "Dirty Fighting")
	..setLvlDataString("gtp1", 4, 0, "Research Dirty Fighting (|cff00ffffLv4|r) [|cffffcc00Z|r]")
	..setLvlDataString("gub1", 4, 0, "|cffffcc00Gives:|r chance to reduce damage |n|cffffcc00Affects:|r |cffffdeadBrigand|r |n|cff6c7b8b(affects organic units only)|r |n|cff6c7b8b(affects non-Hero units only)|r |n|n|cff6c7b8bLv1: 20% chance, -10% damage |nLv2: 25% chance, -20% damage|r |n|cff00ff00Lv3:|r |cffffcc0030%|r chance, |cffffcc00-30%|r damage |n|cff6c7b8bLv4: 35% chance, -40% damage")
	..setLvlDataString("greq", 5, 0, "Rnsb")
	..setLvlDataString("gar1", 5, 0, "ReplaceableTextures\\CommandButtons\\BTNMaim.blp")
	..setLvlDataString("ghk1", 5, 0, "Z")
	..setLvlDataString("gnam", 5, 0, "Dirty Fighting")
	..setLvlDataString("gtp1", 5, 0, "Dirty Fighting (Max Level)")
	..setLvlDataString("gub1", 5, 0, "|cffffcc00Gives:|r chance to reduce damage |n|cffffcc00Affects:|r |cffffdeadBrigand|r |n|cff6c7b8b(affects organic units only)|r |n|cff6c7b8b(affects non-Hero units only)|r |n|n|cff6c7b8bLv1: 20% chance, -10% damage |nLv2: 25% chance, -20% damage |nLv3: 30% chance, -30% damage|r |n|cff00ffffLv4:|r |cffffcc0035%|r chance, |cffffcc00-40%|r damage")
	..setLvlDataString("gnam", 1, 0, "Dirty Fighting")
	..setLvlDataString("gar1", 1, 0, "ReplaceableTextures\\CommandButtons\\BTNMaim.blp")
	..setLvlDataString("greq", 4, 0, commaList(VETERAN_SCUM_ID))

function addFightSkill()
	let u = GetEnteringUnit()
	let id = u.getTypeId()
	if id == ENFORCER or id == BRIGAND
		u.addAbility('A03I')
		SetUnitAbilityLevelSwapped('A03I', u, GetPlayerTechCountSimple(DIRTY_FIGHTING, GetOwningPlayer(u)))

init 
	TriggerRegisterEnterRectSimple(fight, bj_mapInitialPlayableArea)
	fight.addCondition(Condition(function addFightSkill))
	fight.disable()

	registerPlayerUnitEvent(EVENT_PLAYER_UNIT_RESEARCH_FINISH) ->
		let r = GetResearched()
		if r == DIRTY_FIGHTING
			let p = GetTriggerPlayer()
			if GetPlayerTechCountSimple(DIRTY_FIGHTING, p) == 1
				fight.enable()
// 	registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELECTED) ->
// 		GetTriggerUnit().setOwner(GetTriggerPlayer(), false)
	