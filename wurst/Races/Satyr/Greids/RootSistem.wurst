package RootSistem

import ObjectIdGenerator
import UpgradeObjEditing
import CorruptedTreeOfLife
import ObjectIds
import RegisterEvents
import ClosureForGroups
import CorruptedAncientDefender
import GuardiansOfTheCursedForest
import PlagueTreant


public let ROOT_SISTEM_ID = compiletime(UPGD_ID_GEN.next())


@compiletime function meleeweapon()
    new UpgradeDefinition(ROOT_SISTEM_ID)
    ..addEffectApplyAttackUpgradeBonus()
    ..setLevels(5)
    ..setGoldCostBase(300)
    ..setGoldCostIncrement(200)
    ..setTimeBase(90)
    ..setTimeIncrement(60)
    ..presetHotkey(lvl -> "R")
    ..setButtonPositionX(3)
    ..setButtonPositionY(0)
    ..presetName(lvl -> "Root System")
    ..setTooltip(1, "Research Root System (|cffff0000Lv1|r) [|cffffcc00R|r]")
    ..setTooltip(2, "Research Root System (|cffffff00Lv2|r) [|cffffcc00R|r]")
    ..setTooltip(3, "Research Root System (|cff00ff00Lv3|r) [|cffffcc00R|r]")
    ..setTooltip(4, "Research Root System (|cff00ffffLv4|r) [|cffffcc00R|r]")
    ..setTooltip(5, "Root System (Max Level)")
    ..presetIcon(lvl -> "ReplaceableTextures\\CommandButtons\\BTN_nature.blp")
    ..setTooltipExtended(1, "|cffffcc00Gives:|r heals after a kill |n|cffffcc00Affects:|r |cffffdeadCorraption Ancient Defender|r and |cffffdeadYour buildings|r |n|n|cff6c7b8bLv1: heals 10 HP for your buildings and 30 HP for yourself |nLv2: heals 20 HP for your buildings and 60 HP for yourself |nLv3: heals 30 HP for your buildings and 90 HP for yourself |nLv4: heals 40 HP for your buildings and 120 HP for yourself")
    ..setTooltipExtended(2, "|cffffcc00Gives:|r heals after a kill |n|cffffcc00Affects:|r |cffffdeadCorraption Ancient Defender|r and |cffffdeadYour buildings|r |n|n|cffff0000Lv1:|r  heals |cffffcc0010|r HP for your buildings and |cffffcc0030|r HP for yourself |n|cff6c7b8bLv2: heals 20 HP for your buildings and 60 HP for yourself |nLv3: heals 30 HP for your buildings and 90 HP for yourself |nLv4: heals 40 HP for your buildings and 120 HP for yourself")
    ..setTooltipExtended(3, "|cffffcc00Gives:|r heals after a kill |n|cffffcc00Affects:|r |cffffdeadCorraption Ancient Defender|r and |cffffdeadYour buildings|r |n|n|cff6c7b8bLv1: heals 10 HP for your buildings and 30 HP for yourself|r |n|cffffff00Lv2:|r heals |cffffcc0020|r HP for your buildings and |cffffcc0060|r HP for yourself |n|cff6c7b8bLv3: heals 30 HP for your buildings and 90 HP for yourself |nLv4: heals 40 HP for your buildings and 120 HP for yourself")
    ..setTooltipExtended(4, "|cffffcc00Gives:|r heals after a kill |n|cffffcc00Affects:|r |cffffdeadCorraption Ancient Defender|r and |cffffdeadYour buildings|r |n|n|cff6c7b8bLv1: heals 10 HP for your buildings and 30 HP for yourself |nLv2: heals 20 HP for your buildings and 60 HP for yourself|r |n|cff00ff00Lv3:|r heals |cffffcc0030|r HP for your buildings and |cffffcc0090|r HP for yourself |n|cff6c7b8bLv4: heals 40 HP for your buildings and 120 HP for yourself")
    ..setTooltipExtended(5, "|cffffcc00Gives:|r heals after a kill |n|cffffcc00Affects:|r |cffffdeadCorraption Ancient Defender|r and |cffffdeadYour buildings|r |n|n|cff6c7b8bLv1: heals 10 HP for your buildings and 30 HP for yourself |nLv2: heals 20 HP for your buildings and 60 HP for yourself |nLv3: heals 30 HP for your buildings and 90 HP for yourself|r |n|cff00ffffLv4:|r heals |cffffcc0040|r HP for your buildings and |cffffcc00120|r HP for yourself")
    ..setRequirements(1, "" + commaList(CORRUPTED_TREE_OF_LIFE_LV2))
    ..setRequirements(4, "" + commaList(GUARDIANS_OF_THE_CURSED_FOREST_BUILDING_ID))
    ..setRequirements(5, "Rnsb")


function isEnemyUnit() returns bool
    let fu = GetFilterUnit()
    return fu.isAllyOf(GetKillingUnit().getOwner()) and fu.isType(UNIT_TYPE_STRUCTURE)


function batllerage(unit killer, player ownerkiller)
    if GetKillingUnit().getTypeId() == CORRAPTED_ANCIENT_DEFENDER_ID or GetKillingUnit().getTypeId() == PLAGUE_TREANT_ID
        let lvl = GetPlayerTechCountSimple(ROOT_SISTEM_ID, GetOwningPlayer(killer))
        if lvl > 0
            killer.addHP(30.0 * lvl)
            for i = 0 to 12
                if players[i].isAllyOf(ownerkiller) and players[i] != ownerkiller
                    forUnitsOfPlayer(players[i]) x ->
                        if x.isType(UNIT_TYPE_STRUCTURE)
                            x.addHP(10.0 * lvl)


init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH) ->
        batllerage(GetKillingUnit(), GetOwningPlayer(GetKillingUnit()))